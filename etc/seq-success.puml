@startuml

Cron -> PublishScheduler : scheduleEvents
activate PublishScheduler
    PublishScheduler -> Provider : sunEphemerisFor(date)
    activate Provider
        database Redis
        Provider -> Redis : get(date)
        note right : Annotation declarative cache
        activate Redis
            Provider <-- Redis : null
        deactivate Redis
        boundary SunriseAPI
        Provider -> SunriseAPI : HTTP
        note right : OpenAPI generated client
        activate SunriseAPI
            Provider <-- SunriseAPI : JSON
        deactivate SunriseAPI
        Provider -> Redis : set
        note right : Annotation declarative cache
        PublishScheduler <-- Provider : Ephemeris
    deactivate Provider

    loop for each Event
        create PublishTask
        PublishScheduler -> PublishTask : new
        PublishScheduler -> TaskScheduler : schedule(task)
    end

    Cron <-- PublishScheduler
deactivate PublishScheduler

... Later, same day ...

loop for each Event
    TaskScheduler -> PublishTask : run
    activate PublishTask
        PublishTask -> Redis : acquire lock
        note left : Annotation declarative lock
        activate Redis
            PublishTask <-- Redis : lock
        deactivate Redis
        PublishTask -> Redis : enqueue
        TaskScheduler <-- PublishTask
    deactivate PublishTask
end

@enduml

