@startuml

Cron -> SunEventPublishScheduler : scheduleEvents
activate SunEventPublishScheduler
    SunEventPublishScheduler -> SunEphemerisProvider : sunEphemerisFor(date)
    activate SunEphemerisProvider
        database Redis
        SunEphemerisProvider -> Redis : get(date)
        note right : Annotation declarative cache
        activate Redis
            SunEphemerisProvider <-- Redis : null
        deactivate Redis
        boundary SunriseSunset
        SunEphemerisProvider -> SunriseSunset : HTTP
        note right : OpenAPI generated client
        activate SunriseSunset
            SunEphemerisProvider <-- SunriseSunset : JSON
        deactivate SunriseSunset
        SunEphemerisProvider -> Redis : set
        note right : Annotation declarative cache
        SunEventPublishScheduler <-- SunEphemerisProvider : SunEphemeris
    deactivate SunEphemerisProvider

    loop for each event
        create SunEventPublisher
        SunEventPublishScheduler -> SunEventPublisher : new
        SunEventPublishScheduler -> TaskScheduler : schedule(SunEventPublisher)
    end

    Cron <-- SunEventPublishScheduler
deactivate SunEventPublishScheduler

... Later, same day ...

loop for each SunEventPublisher
    TaskScheduler -> SunEventPublisher : run
    activate SunEventPublisher
        SunEventPublisher -> Redis : acquire lock
        note left : Annotation declarative lock
        activate Redis
            SunEventPublisher <-- Redis : lock
        deactivate Redis
        SunEventPublisher -> Redis : enqueue
        TaskScheduler <-- SunEventPublisher
    deactivate SunEventPublisher
end

@enduml

